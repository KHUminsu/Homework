float xx = 200, yy = 250, zz = 0, s = 1.0;
boolean game = true, fpsView = false;
int n = 10;
Mine[] mines;

void setup() {
  size(1800, 1600, P3D);
  mines = new Mine[n];

  for (int i = 0; i < n; i++) {
    float x = random(width);
    float y = random(height);
    float z = random(-500, 500);
    float vx = random(1, 3);
    float vy = random(1, 3);
    float vz = random(1, 3);
    mines[i] = new Mine(x, y, z, vx, vy, vz);
  }
}

void draw() {
  if (game) {
    background(120, 200, 255);

    if (fpsView) {
      camera(xx, yy - 50, zz + 50, xx, yy, zz, 0, 1, 0);
    } else {
      camera(width / 2, height / 2 - 800, 1000, width / 2, height / 2, 0, 0, 1, 0);
    }

    lights();
    noStroke();

    handleInput();

    for (Mine mine : mines) {
      mine.update();
      mine.display();

      if (mine.checkCollision(xx, yy, zz, 50 * s)) {
        gameOver();
        return;
      }
    }

    drawMinsu(xx, yy, zz, s);
  }
}

void handleInput() {
  if (keyPressed) {
    if (key == 'a' || key == 'A') xx -= 5;
    if (key == 'd' || key == 'D') xx += 5;
    if (key == 'w' || key == 'W') yy -= 5;
    if (key == 's' || key == 'S') yy += 5;
    if (key == 'q' || key == 'Q') zz -= 5;
    if (key == 'e' || key == 'E') zz += 5;
    if (key == 'f' || key == 'F') fpsView = !fpsView;
  }
}

void drawMinsu(float xx, float yy, float zz, float m) {
  pushMatrix();
  translate(xx, yy, zz);

  fill(250, 224, 212);
  sphere(50 * m);

  fill(0, 0, 255);
  translate(0, 100 * m, 0);
  box(80 * m, 150 * m, 50 * m);

  fill(0, 255, 0);
  pushMatrix();
  translate(-60 * m, 50 * m, 0);
  box(30 * m, 100 * m, 30 * m);
  popMatrix();

  pushMatrix();
  translate(60 * m, 50 * m, 0);
  box(30 * m, 100 * m, 30 * m);
  popMatrix();

  fill(255, 0, 0);
  translate(0, 100 * m, 0);
  pushMatrix();
  translate(-30 * m, 50 * m, 0);
  box(30 * m, 100 * m, 30 * m);
  popMatrix();

  pushMatrix();
  translate(30 * m, 50 * m, 0);
  box(30 * m, 100 * m, 30 * m);
  popMatrix();

  popMatrix();
}

void gameOver() {
  game = false;
  background(255);
  textSize(50);
  textAlign(CENTER, CENTER);
  fill(0);
  text("Game Over", width / 2, height / 2);
}

class Mine {
  float x, y, z, vx, vy, vz;

  Mine(float x, float y, float z, float vx, float vy, float vz) {
    this.x = x;
    this.y = y;
    this.z = z;
    this.vx = vx;
    this.vy = vy;
    this.vz = vz;
  }

  void update() {
    x += vx;
    y += vy;
    z += vz;

    if (x > width || x < 0) vx = -vx;
    if (y > height || y < 0) vy = -vy;
    if (z > 500 || z < -500) vz = -vz;
  }

  void display() {
    pushMatrix();
    translate(x, y, z);
    fill(255, 0, 0);
    sphere(30);
    popMatrix();
  }

  boolean checkCollision(float mx, float my, float mz, float radius) {
    float distance = dist(x, y, z, mx, my, mz);
    return distance < 30 + radius;
  }
}
